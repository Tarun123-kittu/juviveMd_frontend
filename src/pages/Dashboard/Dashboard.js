import React, { useState, useEffect } from "react";
import Table from "react-bootstrap/Table";
import "./Dashboard.css";
import Default_user from "../../Images/default_user.svg";
import AddUsermodal from "../../components/Modals/AddUsermodal";
import DataTable from "../../components/DataTable/DataTable";
import { common_data_api } from "../../redux/slices/commonDataSlice/commonDataDlice";
import { useDispatch, useSelector } from "react-redux";
import Patient from "../Patient/Patient";
import { dashboard_api } from "../../redux/slices/dashboardSlice/dashboard";
import Reception_patient_list from "../../components/patientComponent/patientListComponent";
import { useNavigate } from "react-router-dom";
import { clear_all_patient_state } from "../../redux/slices/patientSlice/getPatientList";
import { clear_get_single_exercise_state } from "../../redux/slices/exerciseSlice/getExercise";
import Skeleton from 'react-loading-skeleton'
import 'react-loading-skeleton/dist/skeleton.css'
import { getRoutePermissions } from "../../middleware/permissionsMiddleware/getRoutePermissions";
import { permission_constants } from "../../constants/permissionConstants";
import { Col, Row } from "react-bootstrap";
import TrainerBarChart from "./TrainerBarChart";
import UserActivityChart from "./UserActivityChart";
import { get_user_activity_report } from "../../redux/slices/dashboardSlice/getUserActivityReport";
import { get_trainer_chat_response_report } from "../../redux/slices/dashboardSlice/getTrainerChatResponseReport";

const Dashboard = () => {
  const [userActivityReportData,setUserActivityReportData]=useState([])
  const [trainerChatResponseReportData,setTrainerChatResponseReportData]=useState([])
  
  console.log(userActivityReportData,"activityreport",trainerChatResponseReportData)
  const dispatch = useDispatch()
  const navigate = useNavigate()
  const [show, setShow] = useState(false);
  const [data, setData] = useState()
  const permissions_data = useSelector((store) => store.PERMISSIONS_DATA)
  const dashboard_data = useSelector((store) => store.DASHBOARD_STATE)
  const PatientPermissions = getRoutePermissions(permission_constants.PATIENT)?.[0] || {};
  const userRole = localStorage.getItem("user_role");
  const handleShow = () => setShow(true);

  useEffect(() => {
    dispatch(common_data_api())
    dispatch(dashboard_api())
  }, [])
  const columns = [
    "User Name	",
    "Date",
    "Age",
    "Phone No.",
    "Gender",
    "Goal",
    "Assign Trainer",
    "Status",
    "Action",
  ];

  // GET_USER_ACTIVITY_REPORT
  const activityReportResponse=useSelector((store)=>store. GET_USER_ACTIVITY_REPORT)
  const trainerChatReportResponse=useSelector((store)=>store. GET_TRAINER_CHAT_RESPONSE_REPORT)

  useEffect(()=>{
    dispatch(get_user_activity_report())
  },[])   

  useEffect(() => {
    if (activityReportResponse?.isSuccess) {
      setUserActivityReportData(activityReportResponse?.data?.data)
    }
  }, [activityReportResponse])

  useEffect(()=>{
    dispatch(get_trainer_chat_response_report())
  },[])   

  useEffect(() => {
    if (trainerChatReportResponse?.isSuccess) {
      setTrainerChatResponseReportData(trainerChatReportResponse?.data?.data)
    }
  }, [trainerChatReportResponse])

  useEffect(() => {
    if (dashboard_data?.isSuccess) {
      setData(dashboard_data?.data?.data)
    }
  }, [dashboard_data])

  return (
    <div className="wrapper">
      <div className="inner_wrapper">
        <div className="cmn_head mb-3">
          <h2 className="mb-2">Dashboard</h2>
          <div className="dashboardinfo ">
            {dashboard_data?.isLoading ? <Skeleton className="info_card payment-card" height={200} /> : <div
              className="info_card payment-card"
              title="View Patient payment pending"
              style={{ cursor: "pointer" }}
              onClick={() => {
                if (data?.paymentPending >= 0) {
                  navigate("/patient", { state: { val: "paymentPending" } });
                } else {
                  navigate("/exercise", { state: { val: "active" } });
                }
                dispatch(clear_all_patient_state());
              }}
            >
              <div className="info_image d-flex align-items-center justify-content-center">
                <svg
                  width="51"
                  height="51"
                  viewBox="0 0 51 51"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.3434 0.33379C9.82376 0.821445 6.98262 2.23141 4.49133 4.7333C2.27567 6.93836 0.982322 9.29184 0.28264 12.398L0.0494125 13.4263L0.0176088 29.572C-0.0247961 43.8625 -0.00359367 45.7813 0.134222 46.3538C0.611278 48.1772 1.85162 49.5235 3.57963 50.0536C4.2369 50.2656 4.67155 50.2656 23.7326 50.2656C42.7936 50.2656 43.2283 50.2656 43.8855 50.0536C45.5923 49.5341 46.8539 48.1772 47.3203 46.3856C47.4476 45.9085 47.4794 45.1028 47.4794 42.7918V39.8234L48.1048 39.5266C48.8893 39.1449 49.7798 38.2756 50.2145 37.4593C50.84 36.2932 50.8718 35.9858 50.8718 31.6923C50.8718 29.2646 50.8294 27.5896 50.7551 27.2397C50.4477 25.7874 49.3982 24.3986 48.1366 23.8049L47.49 23.4975L47.4794 20.4761C47.4688 17.0731 47.3839 16.5325 46.7373 15.4512C45.7408 13.7974 44.0446 12.9599 41.6805 12.9493H40.7052L40.6734 8.995C40.6416 5.24216 40.631 5.01954 40.4083 4.43647C39.8889 3.06891 38.7651 1.91337 37.44 1.38331C36.9205 1.17129 36.6343 1.12888 35.606 1.12888H34.3868L30.1357 2.83568L25.8846 4.54248L25.2062 3.95941C23.2343 2.26321 20.8702 1.09708 18.2305 0.53521C17.0644 0.291382 14.4459 0.185371 13.3434 0.33379ZM17.0538 3.77919C23.0117 4.6803 27.4006 10.0339 27.0932 16.013C26.8706 20.2853 24.4959 24.0382 20.7854 25.9676C19.0786 26.8475 17.6687 27.2397 15.718 27.3351C12.9723 27.473 10.0464 26.5188 7.83072 24.7378C2.32868 20.3383 1.88343 12.1224 6.87661 7.11858C9.56933 4.42587 13.2904 3.20672 17.0538 3.77919ZM36.6767 4.84991C37.2916 5.42238 37.3022 5.50719 37.3022 9.39785V12.9493H33.772H30.2311L30.1145 12.2708C29.9131 11.2001 29.4997 10.0339 28.8 8.62396C28.4501 7.90307 28.1851 7.2988 28.1957 7.2776C28.2169 7.2564 29.7859 6.62032 31.6835 5.85703C34.9063 4.55308 35.1713 4.46827 35.7438 4.50008C36.242 4.53188 36.4117 4.58488 36.6767 4.84991ZM43.2707 16.6491C44.034 17.1262 44.087 17.3488 44.087 20.4231V23.1265H41.5745C40.1857 23.1265 38.7227 23.1795 38.3093 23.2325C36.8357 23.4445 35.4045 24.388 34.6519 25.6283C33.9734 26.7627 33.9204 27.1549 33.9204 31.5756C33.9098 34.0881 33.9522 35.7207 34.0264 36.0812C34.3974 37.8516 35.7544 39.3463 37.4824 39.8764C38.1079 40.0672 38.4683 40.0884 41.1398 40.0884H44.0976L44.0658 42.9402C44.034 45.6435 44.0234 45.8131 43.8113 46.0993C43.6947 46.2584 43.4297 46.5022 43.2389 46.6294L42.889 46.8732H23.7326H4.57614L4.2263 46.6294C4.03548 46.5022 3.77045 46.2584 3.65383 46.0993C3.43121 45.8025 3.43121 45.7601 3.3994 35.4133L3.3782 25.0241L4.35352 26.0418C6.51617 28.3105 9.17708 29.784 12.315 30.4625C13.2056 30.6533 13.7356 30.6957 15.3046 30.6957C17.4354 30.6957 18.5592 30.5155 20.3084 29.9006C25.821 27.95 29.8071 22.872 30.369 17.1049L30.4432 16.3311L36.6555 16.3629L42.8678 16.3947L43.2707 16.6491ZM46.6525 26.8157C46.8857 26.9535 47.1295 27.2397 47.2673 27.5154C47.4794 27.9606 47.49 28.0984 47.4582 31.7983C47.4264 35.4875 47.4158 35.6359 47.2037 35.9221C47.0871 36.0812 46.8221 36.325 46.6313 36.4522C46.2814 36.696 46.2496 36.696 42.3908 36.696C38.5319 36.696 38.5001 36.696 38.1503 36.4522C37.9594 36.325 37.6944 36.0812 37.5778 35.9221C37.3658 35.6359 37.3552 35.4875 37.3234 31.7559C37.2916 27.9288 37.3022 27.8864 37.5354 27.4624C37.7792 27.0277 38.0973 26.7627 38.5637 26.6143C38.7121 26.5719 40.5143 26.5401 42.5498 26.5507C46.2178 26.5719 46.2602 26.5719 46.6525 26.8157Z"
                    fill="black"
                  />
                  <path
                    d="M14.5627 7.16099C14.1704 7.34121 13.8206 7.71225 13.6721 8.1045C13.4813 8.59216 13.5131 15.7268 13.704 16.1614C13.7888 16.3523 14.7217 17.37 15.7924 18.4301C17.3826 19.9991 17.8278 20.3701 18.1883 20.4867C19.4286 20.8472 20.6054 19.6705 20.2449 18.4301C20.1389 18.0697 19.7891 17.6668 18.5275 16.3947L16.9585 14.8045L16.9267 11.4439C16.8949 8.24231 16.8843 8.07269 16.6723 7.79706C16.5557 7.63804 16.3331 7.40482 16.1846 7.2988C15.8242 7.03377 14.9867 6.95956 14.5627 7.16099Z"
                    fill="black"
                  />
                </svg>
              </div>
              <h3>{data?.paymentPending >=0 ? "Paymant Pending" : data?.totalExercises >= 0 ? "Total Exercise" : "0"}</h3>
              <h4>
                {data?.paymentPending ? data?.paymentPending : data?.totalExercises ? data?.totalExercises : "0"} <span>Till Today</span>
              </h4>
            </div>}
            {dashboard_data?.isLoading ? <Skeleton className="info_card exercise-card" height={200} /> : <div
              className="info_card exercise-card"
              title="View Patient payment pending"
              style={{ cursor: "pointer" }}
              onClick={() => {
                if (data?.healthCases >= 0) {
                  navigate("/patient", { state: { val: "healthIssue" } })
                } else {
                  navigate("/exercise", { state: { val: "draft" } });
                }
                dispatch(clear_all_patient_state());
              }}
            >
              <div className="info_image d-flex align-items-center justify-content-center">
                <svg
                  width="51"
                  height="51"
                  viewBox="0 0 51 51"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M16.1945 0.619255C15.6085 0.827831 15.2212 1.17546 14.8934 1.76146L14.5955 2.29779L14.5657 7.13475L14.5359 11.9816L14.2677 12.0412C11.1192 12.7365 8.71563 14.1469 6.80866 16.4114C2.5279 21.5264 2.70668 28.6577 7.23574 33.7132C8.02038 34.5872 8.19916 35.0143 8.00052 35.5507C7.91113 35.7692 7.83167 35.8188 7.54364 35.8188C7.07683 35.8188 6.61001 36.0274 6.28225 36.375C6.13327 36.5339 4.81229 38.7587 3.3324 41.3212C1.25658 44.9167 0.620925 46.0986 0.531535 46.5257C0.23357 47.9559 1.02814 49.5153 2.40871 50.1906C2.89539 50.429 3.09403 50.4688 3.81908 50.4688C4.53419 50.4688 4.74277 50.429 5.20958 50.2006C5.50755 50.0516 5.94456 49.7437 6.173 49.5053C6.43124 49.2372 7.55357 47.3898 9.24204 44.4598C11.7549 40.0996 11.9039 39.8115 11.9436 39.2653C11.9734 38.8481 11.9337 38.58 11.8145 38.3019C11.6158 37.8549 11.6754 37.7059 12.172 37.4477C12.5296 37.2689 12.8275 37.2689 13.7711 37.4775L14.5458 37.6364V40.6359C14.5458 44.0824 14.5955 44.3903 15.251 45.1054C16.0456 45.9695 14.516 45.9 32.523 45.9C45.7725 45.9 48.5336 45.8801 48.8515 45.7609C49.3382 45.5921 49.9539 45.0359 50.232 44.5194L50.4506 44.1122V23.205V2.28786L50.1923 1.80118C49.9142 1.24498 49.2885 0.718578 48.7323 0.559662C48.484 0.500069 43.1306 0.460342 32.4734 0.470272C18.9358 0.470272 16.5223 0.500069 16.1945 0.619255ZM38.8796 5.3271V8.81329L39.1279 9.05166C39.257 9.19071 39.4557 9.29996 39.5748 9.29996C39.6841 9.29996 40.2701 8.9722 40.8859 8.56498L41.9884 7.82007L43.0809 8.56498C43.6768 8.9722 44.2728 9.29996 44.3919 9.29996C44.5012 9.29996 44.6998 9.21057 44.819 9.10132C45.0375 8.89274 45.0375 8.87288 45.0375 5.37676V1.85084H46.6267C48.4443 1.85084 48.7323 1.9303 48.9707 2.49643C49.0899 2.78447 49.1097 5.82371 49.1097 23.2149C49.1097 45.5325 49.1494 44.0426 48.5436 44.3704C48.3251 44.4896 45.8023 44.5095 32.4634 44.5095H16.6316L16.3137 44.1817L15.986 43.8639L15.9562 40.8346L15.9264 37.8053H16.8501C19.5317 37.8053 22.3525 36.8418 24.5773 35.1633C26.1764 33.9615 27.547 32.2929 28.4012 30.5051L28.7587 29.7602H36.6846C44.5111 29.7602 44.6005 29.7602 44.819 29.5616C45.0971 29.3033 45.1071 28.8365 44.8389 28.5683C44.6402 28.3697 44.5111 28.3697 36.9329 28.3697C29.4937 28.3697 29.2355 28.3598 29.2951 28.1909C29.4043 27.8334 29.6427 26.4627 29.6427 26.1747V25.8867L37.1315 25.8668C44.3323 25.837 44.6303 25.8271 44.829 25.6483C45.0773 25.4199 45.1071 24.9332 44.8687 24.6749C44.7197 24.5061 44.3522 24.4962 37.2408 24.4962H29.7718L29.6526 23.5228C29.5831 22.9964 29.5036 22.4104 29.4738 22.2316L29.4242 21.9138H37.0322C44.5111 21.9138 44.6402 21.9138 44.8389 21.7152C45.0971 21.4569 45.0971 20.9802 44.8389 20.7219C44.6402 20.5233 44.5111 20.5233 36.7938 20.5233C30.5862 20.5233 28.9474 20.4935 28.9474 20.3942C28.9474 20.3346 28.6991 19.7685 28.4111 19.1626L27.8648 18.0403L36.2476 18.0204C44.3224 17.9906 44.6303 17.9807 44.829 17.8019C45.0773 17.5734 45.1071 17.0868 44.8687 16.8285C44.7197 16.6597 44.3025 16.6498 35.8205 16.6498H26.9312L25.8784 15.6267C24.6667 14.4448 23.6635 13.7396 22.2532 13.0642C20.5647 12.2597 18.4988 11.7929 16.6614 11.783H15.9363V7.32346C15.9363 4.27429 15.976 2.77453 16.0456 2.55603C16.1151 2.37725 16.3038 2.14881 16.4726 2.03955C16.7706 1.86077 17.148 1.85084 27.835 1.85084H38.8796V5.3271ZM43.647 4.53252C43.647 6.00248 43.6272 7.21421 43.5974 7.21421C43.5676 7.21421 43.2398 7.01556 42.8723 6.76726C42.5048 6.51896 42.0976 6.32031 41.9586 6.32031C41.8096 6.32031 41.4222 6.51896 41.0647 6.76726C40.717 7.01556 40.3893 7.21421 40.3496 7.21421C40.3098 7.21421 40.2701 6.00248 40.2701 4.53252V1.85084H41.9586H43.647V4.53252ZM18.3896 13.3324C25.4612 14.3753 29.9407 21.4768 27.8052 28.2704C27.2391 30.0582 26.2856 31.6374 24.9249 32.9981C22.6207 35.3321 19.5715 36.524 16.2839 36.385C15.5788 36.3552 14.7047 36.2558 14.3472 36.1664C12.6388 35.7592 11.7052 35.8883 10.9007 36.6631L10.4538 37.0901L9.8479 36.7326C9.5102 36.5339 9.22217 36.375 9.21224 36.3651C9.20231 36.3651 9.2619 36.1366 9.34136 35.8685C9.65919 34.8256 9.35129 33.9317 8.27862 32.7696C3.98793 28.1413 4.07731 21.1093 8.48719 16.6498C11.0795 14.0277 14.7742 12.7861 18.3896 13.3324ZM8.96394 37.8152C10.4736 38.6892 10.5729 38.7687 10.5729 39.0964C10.5729 39.2752 9.76844 40.7551 8.22896 43.4269C5.00101 49.0286 5.29897 48.5717 4.65338 48.8895C4.1965 49.108 4.02765 49.1478 3.60057 49.0981C2.57756 48.969 1.89224 48.2042 1.89224 47.1415C1.88231 46.6051 1.9419 46.5058 4.55406 41.9768C6.02402 39.4341 7.27547 37.3285 7.33506 37.2888C7.58337 37.1199 7.96079 37.2391 8.96394 37.8152Z"
                    fill="black"
                  />
                  <path
                    d="M20.1673 6.5388C19.9488 6.8467 19.9687 7.24398 20.217 7.47242C20.4156 7.6512 20.6937 7.66113 27.8747 7.66113H35.3238L35.5125 7.42276C35.7608 7.1248 35.7509 6.76724 35.5026 6.51893C35.3039 6.32029 35.1748 6.32029 27.8151 6.32029H20.3163L20.1673 6.5388Z"
                    fill="black"
                  />
                  <path
                    d="M20.2069 10.392C19.9189 10.68 19.9487 11.127 20.2765 11.3753C20.5347 11.5839 20.5546 11.5839 27.9242 11.564L35.3237 11.5342L35.5124 11.2958C35.7607 10.9979 35.7508 10.6403 35.5025 10.392C35.3038 10.1934 35.1747 10.1934 27.8547 10.1934C20.5347 10.1934 20.4056 10.1934 20.2069 10.392Z"
                    fill="black"
                  />
                  <path
                    d="M29.5435 35.0241C29.1363 35.4313 29.4045 36.0471 30.06 36.1663C30.2388 36.1961 33.5859 36.216 37.4992 36.1961C44.3424 36.1663 44.6304 36.1564 44.8291 35.9776C45.0873 35.7392 45.1072 35.2128 44.8589 34.9943C44.69 34.8354 44.0147 34.8255 37.2111 34.8255C29.8713 34.8255 29.7421 34.8255 29.5435 35.0241Z"
                    fill="black"
                  />
                  <path
                    d="M29.593 38.9476C29.454 39.0768 29.3447 39.2754 29.3447 39.3946C29.3447 39.5038 29.454 39.7124 29.593 39.8415L29.8314 40.0898H37.2209C44.5111 40.0898 44.6005 40.0898 44.819 39.8912C45.0971 39.633 45.1071 39.1662 44.8389 38.898C44.6402 38.6993 44.5111 38.6993 37.2408 38.6993H29.8314L29.593 38.9476Z"
                    fill="black"
                  />
                  <path
                    d="M15.0426 14.7729C12.8874 15.1503 10.8413 16.2528 9.33164 17.8519C7.32535 19.9873 6.38179 22.7286 6.62016 25.738C6.89826 29.1944 9.01381 32.2932 12.1822 33.8923C18.1514 36.8918 25.3125 33.3858 26.6831 26.7809C26.9414 25.5294 26.8917 23.4536 26.5639 22.2617C25.5807 18.6564 22.7996 15.8952 19.1943 14.9517C18.2507 14.7034 15.9862 14.6041 15.0426 14.7729ZM18.1812 16.1634C20.118 16.5011 21.8064 17.4149 23.1473 18.8649C24.6868 20.5236 25.4714 22.5299 25.4714 24.7944C25.4714 28.0224 23.7829 30.9226 20.9721 32.4819C18.5785 33.8128 15.569 33.942 13.1158 32.7998C9.92757 31.3298 7.98087 28.3204 7.98087 24.854C7.98087 23.5629 8.13978 22.6888 8.5768 21.5566C9.61968 18.855 12.3411 16.6401 15.2115 16.1535C15.9167 16.0343 17.5058 16.0442 18.1812 16.1634Z"
                    fill="black"
                  />
                  <path
                    d="M16.125 17.0472C15.1914 17.2062 14.1783 17.9411 13.7711 18.7754C13.1255 20.0666 13.2546 21.2585 14.2081 22.5795C14.3571 22.788 14.3472 22.798 13.8208 23.0661C12.3409 23.7812 11.0596 25.4101 10.6226 27.1284C10.5332 27.5058 10.4736 28.1812 10.4736 28.9857C10.4736 30.1279 10.4935 30.2769 10.6723 30.4557C10.8709 30.6543 11 30.6543 16.711 30.6543H22.5611L22.7696 30.4259C22.9683 30.2173 22.9882 30.0882 22.9882 29.0056C22.9882 27.5952 22.8193 26.8205 22.3128 25.7875C21.8559 24.8638 20.8527 23.7812 20.0085 23.3045C18.9954 22.7185 19.0352 22.788 19.3927 22.351C20.0979 21.4671 20.2667 20.0468 19.79 19.0237C19.2934 17.9411 18.4293 17.2657 17.2871 17.0572C16.9593 16.9976 16.6713 16.9579 16.6415 16.9579C16.6117 16.9678 16.3733 17.0075 16.125 17.0472ZM17.297 18.4874C18.1909 18.7556 18.8266 19.7389 18.6677 20.6129C18.4988 21.5465 17.8135 22.1822 16.8997 22.2815C15.1417 22.4603 14.0889 20.4043 15.2609 19.0734C15.5986 18.686 15.837 18.5371 16.2839 18.4278C16.721 18.3285 16.7508 18.3285 17.297 18.4874ZM17.7539 23.8508C19.9886 24.3176 21.5877 26.304 21.5976 28.5884V29.2638H16.7309H11.8641V28.5288C11.8641 26.7311 12.8772 25.1022 14.4862 24.2779C15.549 23.7415 16.5918 23.6025 17.7539 23.8508Z"
                    fill="black"
                  />
                </svg>
              </div>
              <h3>{data?.healthCases >= 0 ? "Health Cases" : data?.exercisesInDraft >= 0 ? "Exercise In Draft" : ""}</h3>
              <h4>
                {data?.healthCases ? data?.healthCases : data?.exercisesInDraft ? data?.exercisesInDraft : "0"} <span>Till Today</span>
              </h4>
            </div>}
            {dashboard_data?.isLoading ? <Skeleton className="info_card exercise-card" height={200} /> : <div
              className="info_card exercise-card"
              title="View Patient payment pending"
              style={{ cursor: "pointer" }}
              onClick={() => {
                if (data?.exercisesApproval >= 0) {
                  navigate("/exercise", { state: { val: "approvalRequest" } })
                } else {
                  navigate("/patient", { state: { val: "active" } })
                }
                dispatch(clear_all_patient_state());
              }}
            >
              <div className="info_image d-flex align-items-center justify-content-center">
                <svg
                  width="44"
                  height="51"
                  viewBox="0 0 44 51"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17.608 1.09256C16.0159 1.43442 14.4922 2.58698 13.7206 4.0521L13.3005 4.84327H9.26658C4.76377 4.84327 4.37308 4.89211 3.12284 5.54653C2.234 6.01537 1.12051 7.15816 0.671202 8.06654C-0.0222889 9.48282 0.016781 8.23259 0.0460835 28.2168L0.0753859 46.2085L0.29027 46.775C1.02283 48.6797 2.31214 49.9983 4.02145 50.5844L4.6661 50.7992L13.2029 50.8285C17.901 50.8383 21.7299 50.8383 21.7006 50.8188C21.681 50.7992 20.7531 49.9202 19.6396 48.8653L17.6178 46.9411H11.5033C5.69169 46.9411 5.36936 46.9313 5.0275 46.7555C4.56843 46.5211 4.2754 46.2085 4.08005 45.7495C3.95307 45.4271 3.93354 43.4541 3.93354 27.8164V10.2447L4.15819 9.81491C4.28517 9.5805 4.57819 9.2484 4.80284 9.09212L5.22285 8.7991L7.16657 8.7698L9.1103 8.74049V12.5986V16.4666L18.8582 16.447L28.5964 16.4177L28.6257 12.5791L28.6453 8.75026H30.3839C32.2885 8.75026 32.6304 8.83817 33.1578 9.39492C33.695 9.98096 33.6755 9.42422 33.7243 21.2624L33.7732 32.2606L35.7071 30.1117L37.6411 27.9629L37.602 18.8694C37.563 8.78933 37.6118 9.43399 36.9085 8.0177C36.2639 6.72839 35.0723 5.68327 33.6267 5.15583L32.8941 4.89211L28.6355 4.86281L24.3866 4.8335L24.0838 4.22792C23.4978 3.02652 22.3843 1.96186 21.1927 1.44419C20.5773 1.1707 19.415 0.936283 18.7606 0.946049C18.4773 0.946049 17.9596 1.01442 17.608 1.09256ZM19.542 4.99955C19.7373 5.07769 20.0303 5.26327 20.1769 5.40979C20.6848 5.88839 20.7727 6.16188 20.8117 7.50002L20.8508 8.75026H22.7945H24.7383V10.6549V12.5596H18.8778H13.0173V10.6549V8.75026H14.9708H16.9243V7.57816C16.9243 6.73816 16.9634 6.29863 17.0708 6.0349C17.481 5.05816 18.5848 4.58932 19.542 4.99955Z"
                    fill="black"
                  />
                  <path
                    d="M7.84033 22.3268V24.2803H9.79383H11.7473V22.3268V20.3733H9.79383H7.84033V22.3268Z"
                    fill="black"
                  />
                  <path
                    d="M15.6543 22.3268V24.2803L22.7162 24.2607L29.7683 24.2314L29.7976 22.2975L29.8171 20.3733H22.7357H15.6543V22.3268Z"
                    fill="black"
                  />
                  <path
                    d="M7.84033 30.1403V32.0938L9.82313 32.0742L11.7962 32.0449L11.8255 30.111L11.845 28.1868H9.84266H7.84033V30.1403Z"
                    fill="black"
                  />
                  <path
                    d="M15.752 30.1403V32.0938L22.765 32.0742L29.7683 32.0449L29.7976 30.111L29.8171 28.1868H22.7845H15.752V30.1403Z"
                    fill="black"
                  />
                  <path
                    d="M34.0176 37.8178C30.3352 41.9202 27.2975 45.2802 27.2487 45.2802C27.2096 45.2802 25.4808 43.6588 23.4003 41.676L19.6203 38.0718L18.3896 39.3416C17.7156 40.0448 17.1198 40.6895 17.0612 40.7774C16.9733 40.9043 17.8036 41.7443 22.2184 45.9444L27.4734 50.9453L35.5608 41.9495C40.005 37.0071 43.6385 32.9243 43.6385 32.8755C43.6385 32.768 40.9232 30.3359 40.806 30.3457C40.7571 30.3457 37.6999 33.7057 34.0176 37.8178Z"
                    fill="black"
                  />
                  <path
                    d="M7.84033 37.9059V39.8105H9.79383H11.7473V37.9059V36.0012H9.79383H7.84033V37.9059Z"
                    fill="black"
                  />
                </svg>
              </div>
              <h3>{data?.exercisesApproval >= 0 ? "Exercise Approval" : data?.totalPatients >= 0 ? "Total Patient" : ""}</h3>
              <h4>
                {data?.exercisesApproval ? data?.exercisesApproval : data?.totalPatients ? data?.totalPatients : "0"} <span>Till Today</span>
              </h4>
            </div>}
          </div>
        </div>
        <div>
     { userRole === "Admin" && <Row className="mb-3 pt-2 pb-2">
        <Col lg={9}>
          <div className="chart_card">
          <h4>
          Chats (Response time from Trainer )
          </h4>
          <TrainerBarChart trainerChatResponseReportData={trainerChatResponseReportData}/>
          </div>
        </Col>
        <Col lg={3}>
        <div className="chart_card userActivity">
          <h4>User Activity Pie Chart</h4>
          <UserActivityChart userActivityReportData={userActivityReportData}/>
          </div>
        </Col>
      </Row>}
        </div>
        <div className="cmn_head mb-2">
          <Reception_patient_list showButtons={false} className={true} />
        </div>

      </div>
      <AddUsermodal show={show} setShow={setShow} />
    </div>
  );
};

export default Dashboard;
